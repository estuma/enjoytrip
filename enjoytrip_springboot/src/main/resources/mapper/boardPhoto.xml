<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.trip.board.photo.model.mapper.PhotoMapper">
	
	<resultMap type="BoardPhotoDto" id="photoDto">
		<result column="board_photo_id" property="boardPhotoId"/>
		<result column="user_id" property="userId"/>
		<result column="content" property="content"/>
		<result column="sido_code" property="sidoCode"/>
		<result column="gugun_code" property="gugunCode" />
		<result column="place" property="place"/>
		<result column="like" property="like"/>
		<result column="isLike" property="isLike"/>
		<result column="register_time" property="registerTime"/>
		<result column="thumbnail_id" property="thumbnailId"/>
		<result column="detail_place" property="detailPlace" />
	</resultMap>
	
	<resultMap type="PhotoInfoDto" id="photoInfo">
		<result column="photo_info_id" property="photoInfoId"/>
		<result column="photo_id" property="photoId"/>
		<result column="save_folder" property="saveFolder"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>		 
	</resultMap>
	
	<resultMap type="BoardPhotoItemDto" id="photoItem">
		<result column="board_photo_id" property="boardPhotoId"/>
		<result column="user_id" property="userId"/>
		<result column="like" property="like"/> 
		<result column="thumbNail" property="thumbNail"/>
		<result column="isLike" property="isLike"/>
	</resultMap>
	
	<resultMap type="SigunDto" id="sigun">
		<result column="sido_code" property="sidoCode"/>
		<result column="sigun_name" property="sigunName"/>
		<result column="gugun_code" property="gugunCode"/> 
	</resultMap>
	
	<resultMap type="thumbnailDto" id="thumbnail">
		<result column="thumbnail_id" property="thumbnailId"/>
		<result column="save_folder" property="saveFoler"/>
		<result column="original_file" property="originalFile"/>
		<result column="save_file" property="saveFile"/>
	</resultMap>
	
	<resultMap type="CommentDto" id="comment">
		<result column="comment_id" property="commentId"/>
		<result column="user_id" property="userId"/>
		<result column="content" property="content"/>
		<result column="register_time" property="registerTime"/>
		<result column="board_id" property="boardId"/>
		<result column="board_type" property="boardType"/>
		<result column="parent_id" property="parentId"/>
	</resultMap>
	
	<insert id="writePhoto" parameterType="boardPhotoDto">
		insert into board_photo (user_id, content, sido_code, gugun_code, place, `like`, register_time, thumbnail_id)
		values (#{userId}, #{content}, #{sidoCode}, #{gugunCode}, #{place}, #{like}, now(), #{thumbnailId})
		<selectKey resultType="int" keyProperty="boardPhotoId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="registerFile" parameterType="boardPhotoDto">
		insert into photo_info (photo_id , save_folder, original_file, save_file)
		values
		<foreach collection="photoInfos" item="photoinfo" separator=", ">
			(#{boardPhotoId}, #{photoinfo.saveFolder}, #{photoinfo.originalFile}, #{photoinfo.saveFile})
		</foreach>
	</insert> 


 	<select id='getList' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		(select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId}) as isLike
		from board_photo b join 
		thumbnail t on b.thumbnail_id=t.thumbnail_id order by register_time desc
		limit #{page},4
	</select>
	
	 <select id='getListByTimeAsc' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		( select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId} )
			as isLike
		from board_photo b join 
		thumbnail t on b.thumbnail_id=t.thumbnail_id
		<where>
			<if test="sidocode != ''">
				b.sido_code=#{sidocode} and b.gugun_code=#{guguncode}
			</if>
		</where>
		 order by register_time asc
		limit #{page},4
	</select>
	
	<select id='getListByTimeDesc' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		( select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId} )
			as isLike
		from board_photo b join 
		thumbnail t on b.thumbnail_id=t.thumbnail_id 
		<where>
			<if test="sidocode != ''">
				b.sido_code=#{sidocode} and b.gugun_code=#{guguncode}
			</if>
		</where>
		order by register_time desc
		limit #{page},4
	</select>
	
	<select id='getListByLike' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		( select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId} )
			as isLike
		from board_photo b join 
		thumbnail t on b.thumbnail_id=t.thumbnail_id 
		<where>
			<if test="sidocode != ''">
				b.sido_code=#{sidocode} and b.gugun_code=#{guguncode}
			</if>
		</where>
		order by `like` desc, register_time desc
		limit #{page},4
	</select>
	
	<select id='getListByArea' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		(select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId} )
		as isLike
		from board_photo b join thumbnail t
		on b.thumbnail_id=t.thumbnail_id where b.sido_code=#{sidocode} and b.gugun_code=#{guguncode}
		order by b.register_time desc
		limit #{page},4
	</select>

	<select id='getListByWord' parameterType="map" resultMap="photoItem">
		select b.board_photo_id, b.user_id, b.like, concat(t.save_folder,'/',t.save_file) thumbNail,
		( select count(*) from like_photo where board_photo_id=b.board_photo_id and user_id=#{userId} )
			as isLike
		from board_photo b join thumbnail t
		 on b.thumbnail_id=t.thumbnail_id where instr(content,#{word})>0 or instr(place,#{word})>0
		order by b.register_time desc
		limit #{page},4
	</select>
	
	<select id='getSigun' resultMap="sigun">
		select * from sigun
	</select>
	
	<insert id='writeThumbnail' parameterType='thumbnailDto'>
		insert into thumbnail (save_folder,original_file,save_file)
		values (#{saveFolder},#{originalFile},#{saveFile})
		<selectKey resultType="int" keyProperty="thumbnailId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<select id='getPhoto' parameterType='int' resultMap='photoDto'>
		select b.board_photo_id, b.user_id, b.content, b.`like`, substr(b.register_time,1,10) register_time, concat(s.sigun_name,' ',b.place) as detail_place, b.thumbnail_id
		from board_photo b inner join sigun s 
		on (b.sido_code=s.sido_code and b.gugun_code=s.gugun_code) or (b.sido_code=s.sido_code and s.gugun_code is null)
		where board_photo_id=#{photoId}
	</select>

	<select id='getPhotoList' parameterType='int' resultType="String">
		select concat(save_folder,'/',save_file) path 
		from photo_info where photo_id=#{photoId}
	</select>

	<select id="listComment" parameterType="int" resultMap="comment">
		select comment_id,user_id,content, substr(register_time,1,10) register_time,
		board_id,board_type,parent_id from comment
		where board_id=#{qnaId} and board_type='photo'
	</select>
	
	<update id="modifyPhoto" parameterType="boardPhotoDto">
		update board_photo 
		set content=#{content} where board_photo_id=#{boardPhotoId}
	</update>
	
	<insert id="writeComment" parameterType="commentDto">
		insert into comment (user_id, content, register_time, board_id, board_type)
		values 
		(#{userId}, #{content}, now(), #{boardId}, 'photo')
		<selectKey resultType="int" keyProperty="commentId" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>
	
	<update id="modifyComment" parameterType="commentDto">
		update comment
		set content=#{content} 
		where comment_id=#{commentId}
	</update>
	
	<delete id="deleteAllComments" parameterType="int">
		delete from comment 
		where board_id=#{photoId} and board_type="photo"
	</delete>
	
	<delete id="deletePhoto" parameterType="int">
		delete from board_photo
		where board_photo_id=#{photoId}
	</delete>
	
	<delete id="deleteAllPhotos" parameterType="int">
		delete from photo_info
		where photo_id=#{photoId}
	</delete>
	
	<delete id="deleteThumbnail" parameterType="int">
		delete from thumbnail 
		where thumbnail_id=#{thumbnailId}
	</delete>
	
	<delete id="deleteComment" parameterType="int">
		delete from comment
		where comment_id=#{commentId}
	</delete>
	
	<update id='deleteLike' parameterType="map">
		delete from like_photo where 
		board_photo_id=#{photoId} and user_id=#{userId}
	</update>
	
	<update id='addLike' parameterType="map">
		insert into like_photo (board_photo_id, user_id) 
		values (#{photoId}, #{userId})
	</update>
	
	<update id='updateLike' parameterType="map">
		update board_photo 
		<set>
			<if test='state == "1"'>
				`like`=`like`-1
			</if>
			<if test='state == "0"'>
				`like`=`like`+1
			</if>
		</set>
		where board_photo_id=#{photoId}
	</update>
	
	
	<delete id='deleteLikePhotos' parameterType='int'>
		delete from like_photo where board_photo_id=#{photoId}
	</delete>
</mapper>